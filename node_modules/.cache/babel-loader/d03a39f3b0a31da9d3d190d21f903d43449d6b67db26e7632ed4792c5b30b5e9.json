{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aadit\\\\OneDrive\\\\Desktop\\\\AadityaPatil\\\\College\\\\Codes\\\\Internship\\\\court_proto\\\\src\\\\components\\\\Login_page.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      // Call login API\n      const response = await fetch('http://localhost:5000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n\n      // If login is successful\n      if (response.ok) {\n        localStorage.setItem('authToken', data.token); // Store JWT token\n        localStorage.setItem('user', JSON.stringify(data.user)); // Store user details\n\n        // Redirect based on role\n        const userRole = data.user.role;\n        if (userRole === 'admin') {\n          navigate('/admin');\n        } else if (userRole === 'judge') {\n          navigate('/judge');\n        } else if (userRole === 'stenographer') {\n          navigate('/stenographer');\n        } else {\n          navigate('/user'); // Default for normal users\n        }\n      } else {\n        // If user is not found in the main User collection, check TempUser\n        if (data.message === 'Invalid email or password') {\n          await checkTempUser(email);\n        } else {\n          setError(data.message);\n        }\n      }\n    } catch (error) {\n      setError('Error logging in');\n    }\n  };\n\n  // Check if user exists in the TempUser collection\n  const checkTempUser = async email => {\n    try {\n      const response = await fetch('http://localhost:5000/api/check-temp-user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // If user is found in the TempUser collection, redirect to default landing page\n        navigate('/default_landing_page');\n      } else {\n        setError(data.message);\n      }\n    } catch (error) {\n      setError('Error checking temporary user');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-10 rounded-lg shadow-lg w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl font-semibold mb-4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            className: \"w-full px-4 py-2 border border-gray-300 rounded-md\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            className: \"w-full px-4 py-2 border border-gray-300 rounded-md\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full bg-indigo-600 text-white py-2 rounded-lg hover:bg-indigo-700\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","user","userRole","role","message","checkTempUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/aadit/OneDrive/Desktop/AadityaPatil/College/Codes/Internship/court_proto/src/components/Login_page.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Call login API\r\n      const response = await fetch('http://localhost:5000/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      // If login is successful\r\n      if (response.ok) {\r\n        localStorage.setItem('authToken', data.token); // Store JWT token\r\n        localStorage.setItem('user', JSON.stringify(data.user)); // Store user details\r\n\r\n        // Redirect based on role\r\n        const userRole = data.user.role;\r\n        if (userRole === 'admin') {\r\n          navigate('/admin');\r\n        } else if (userRole === 'judge') {\r\n          navigate('/judge');\r\n        } else if (userRole === 'stenographer') {\r\n          navigate('/stenographer');\r\n        } else {\r\n          navigate('/user'); // Default for normal users\r\n        }\r\n      } else {\r\n        // If user is not found in the main User collection, check TempUser\r\n        if (data.message === 'Invalid email or password') {\r\n          await checkTempUser(email);\r\n        } else {\r\n          setError(data.message);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setError('Error logging in');\r\n    }\r\n  };\r\n\r\n  // Check if user exists in the TempUser collection\r\n  const checkTempUser = async (email) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/check-temp-user', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // If user is found in the TempUser collection, redirect to default landing page\r\n        navigate('/default_landing_page');\r\n      } else {\r\n        setError(data.message);\r\n      }\r\n    } catch (error) {\r\n      setError('Error checking temporary user');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n      <div className=\"bg-white p-10 rounded-lg shadow-lg w-96\">\r\n        <h2 className=\"text-center text-2xl font-semibold mb-4\">Login</h2>\r\n\r\n        {error && <p className=\"text-red-500\">{error}</p>}\r\n\r\n        <form onSubmit={handleLogin}>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-md\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-md\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-indigo-600 text-white py-2 rounded-lg hover:bg-indigo-700\"\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}